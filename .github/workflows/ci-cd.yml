name: CICD pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
    id-token: write
    contents: read

jobs:

  code-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
          dotnet-version: '9.0'

    - name: Restore Dependencies
      run: dotnet restore ProductCatalogAPI.sln

    - name: Code Formatting Check
      run: dotnet format ProductCatalogAPI.sln --verify-no-changes

    - name: Run Tests
      run: dotnet test ProductCatalogAPI.sln --configuration Release --no-restore --verbosity normal

  docker-build-and-push:
    needs: code-checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
          context: ./ProductCatalogAPI
          file: ./ProductCatalogAPI/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/product-catalog-api:latest

  deploy-aks:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4
    
      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Set up kubectl
        uses: Azure/setup-kubectl@v4.0.0

      - name: Get AKS credentials
        run: |
         az aks get-credentials --resource-group productcatalog-rg --name AKS-productcatalog

      - name: Create namespace if not exists
        run: kubectl create namespace productcatalog --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/mongo.yaml
          kubectl apply -f k8s/deployment.yaml
          
      - name: Get Pods
        run: kubectl get pods -n productcatalog

      - name: Get Services
        run: kubectl get svc -n productcatalog
